ppois(10, lambda=15)
n=9
mu=1100
sd=30
mn+c(-1, 1)*qt(0.975, n-1)*sd/sqrt(n)
mu+c(-1, 1)*qt(0.975, n-1)*sd/sqrt(n)
mu+c(-1, 1)*qt(0.95, n-1)*sd/sqrt(n)
qt(.975, 8)
2*sqrt(9)/qt(.975, 8)
sd1=sqrt(0.6)
sd2=sqrt(0.68)
sd3=sqrt(sd1^2/10 + sd2^2/10)
sd3
sd1
sd2
mu=-2
mu+c(-1, 1)*qt(0.95, 10-1)*sd3/sqrt(10)
mu+c(-1, 1)*qt(0.95, 10-1)*sd1/sqrt(10)
mu+c(-1, 1)*qt(0.95, 10-1)*sd2/sqrt(10)
sqrt(2.74^2/7 + 1.64^2/5)
(2.74+1.64)/2
mu+c(-1, 1)*qt(0.95, 10-1)*sd3/sqrt(10)
mu=-2
s_old=0.68
s_new=0.6
s_comb = sqrt((9*s_old + 9*s_new)/(18))
s_comb
qt(.95, 10-1)
mu+c(-1, 1)*qt(0.95, 10-1)*s_comb/sqrt(10)
mu+c(-1, 1)*qt(0.95, 10-1)*s_comb*sqrt(1/10 + 1/10)
mu+c(-1, 1)*qt(0.95, 10+10-2)*s_comb*sqrt(1/10 + 1/10)
mu+c(-1, 1)*qt(0.975, 10+10-2)*s_comb*sqrt(1/10 + 1/10)
n_old=100
n_new=100
mu=-2
s_old=2
s_new=0.5
s_comb = sqrt(((n_old-1)*s_old^2 + (n_new-1)*s_new^2)/(n_old+n_new-2))
s_comb
mu+c(-1, 1)*qt(0.975, n_old+n_new-2)*s_comb*sqrt(1/n_old + 1/n_new)
mu=2
mu+c(-1, 1)*qt(0.975, n_old+n_new-2)*s_comb*sqrt(1/n_old + 1/n_new)
n_old=9; n_new=9
mu=-3-1
s_old=1.5
s_new=1.8
s_comb = sqrt(((n_old-1)*s_old^2 + (n_new-1)*s_new^2)/(n_old+n_new-2))
mu+c(-1, 1)*qt(0.975, n_old+n_new-2)*s_comb*sqrt(1/n_old + 1/n_new)
mu
mu+c(-1, 1)*qt(0.95, n_old+n_new-2)*s_comb*sqrt(1/n_old + 1/n_new)
setwd(paste('/home/tom/scripts/gnuR/coursera/datasciencecoursera/',
'reproducible_research/peer_assgn_2', sep=""))
NOAA <- read.csv('./data/NOAA_data', header=TRUE)
evs <- tolower(NOAA$EVTYPE)
events <- rep("Other", length(evs))
events[c(grep("flood", evs), grep("flooding", evs), grep("rising water", evs),
grep("floood", evs))] <- "Flood"
events[c(grep("tornado", evs), grep("torndao", evs))] <- "Tornado"
events[c(grep("hail", evs), grep("freezing", evs), grep("ice", evs),
grep("glaze", evs), grep("icy", evs))] <-
"Hail/Freezing Rain/Ice"
events[c(grep("winter", evs), grep("snow", evs), grep("sleet", evs),
grep("blizzard", evs), grep("wintry", evs), grep("mix", evs))] <-
"Winter/Snow/Blizzard"
events[c(grep("tide", evs), grep("coastal", evs), grep("surf", evs),
grep("sea", evs), grep("wave", evs), grep("surge", evs),
grep("swell", evs))] <- "Tide/Wave Event"
events[c(grep("summary", evs), grep("remnant", evs))] <- NA
events[c(grep("hurricane", evs), grep("tsunami", evs), grep("tropical", evs),
grep("typhoon", evs))] <- "Hurricane/Tsunami/Tropical Storm"
events[c(grep("wind", evs), grep("wnd", evs))] <- "Wind"
events[c(grep("dry", evs), grep("drought", evs))] <- "Dry/Drought"
events[c(grep("cold", evs), grep("frost", evs), grep("cool", evs),
grep("freeze", evs), grep("low temperature", evs),
grep("record low", evs))] <- "Cold"
events[grep("volcan", evs)] <- "Volcanic Ash"
events[grep("fire", evs)] <- "Wildfire"
events[c(grep("thunderstorm", evs), grep("lightning", evs),
grep("lighting", evs), grep("ligntning", evs))] <- "Thunderstorms"
events[c(grep("mud", evs), grep("rock", evs), grep("landslide", evs),
grep("landslump", evs))] <- "Mudslide/Rockslide/Landslide"
events[c(grep("avalance", evs), grep("avalanche", evs))] <- "Avalanche"
events[c(grep("warm", evs), grep("heat", evs), grep("hot", evs),
grep("record high", evs), grep("hyperthermia", evs),
grep("high temperature", evs))] <- "Heat"
events[c(grep("rain", evs), grep("wet", evs), grep("precipitation", evs),
grep("precipatation", evs), grep("showers", evs))] <- "Rain"
events[c(grep("fog", evs), grep("vog", evs))] <- "Fog"
events[c(grep("spout", evs))] <- "Waterspouts"
prop.dmg <- NOAA$PROPDMG
prop.dmg[prop.dmg==""] <- 0
prop.factor <- rep(NA, length(prop.dmg))
prop.factor[NOAA$PROPDMGEXP==""] <- 1
prop.factor[((NOAA$PROPDMGEXP=="k") | (NOAA$PROPDMGEXP=="K"))] <- 1e3
prop.factor[((NOAA$PROPDMGEXP=="m") | (NOAA$PROPDMGEXP=="M"))] <- 1e6
prop.factor[((NOAA$PROPDMGEXP=="b") | (NOAA$PROPDMGEXP=="B"))] <- 1e9
#There is a serious error in this reference to the Napa Valley floods in
#January 2006
prop.factor[(NOAA$REFNUM==605943)] <- 1e6
prop.dmg <- prop.dmg*prop.factor/1e6
crop.dmg <- NOAA$CROPDMG
crop.dmg[prop.dmg==""] <- 0
crop.factor <- rep(NA, length(crop.dmg))
crop.factor[NOAA$CROPDMGEXP==""] <- 1
crop.factor[((NOAA$CROPDMGEXP=="k") | (NOAA$CROPDMGEXP=="K"))] <- 1e3
crop.factor[((NOAA$CROPDMGEXP=="m") | (NOAA$CROPDMGEXP=="M"))] <- 1e6
crop.factor[((NOAA$CROPDMGEXP=="b") | (NOAA$CROPDMGEXP=="B"))] <- 1e9
crop.dmg <- crop.dmg*crop.factor/1e6
date <- strptime(NOAA$BGN_DATE, "%m/%d/%Y %H:%M:%S")
NOAA.clean <- data.frame("Date"=date, "State"=NOAA$STATE, "Event"=events,
"Fatalities"=NOAA$FATALITIES,
"Injuries"=NOAA$INJURIES, "Property.Damage"=prop.dmg,
"Crop.Damage"=crop.dmg,
"Year"=as.numeric(format(date, "%Y")))
NOAA.clean <- NOAA.clean[complete.cases(NOAA.clean), ]
library(ggplot2)
total.dmg.year <- aggregate((NOAA.clean$Property.Damage +
NOAA.clean$Crop.Damage),
by=list(NOAA.clean$Event, NOAA.clean$Year),
FUN=sum)
names(total.dmg.year) <- c("Event", "Year", "Total.Damage")
x11()
qplot(Year, Total.Damage, data=total.dmg.year, color=Event, geom="line",
ylab="Total Damage (in Million USD)")
qplot(Year, Total.Damage, data=total.dmg.year, color=Event, geom="line",
ylab="Total Damage (in Million USD)", xlim=c(1990, 2020))
qplot(Year, Total.Damage, data=total.dmg.year, color=Event, geom="line",
ylab="Total Damage (in Million USD)", xlim=c(1990, 2015))
